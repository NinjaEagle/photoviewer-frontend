{"ast":null,"code":"import _objectWithoutProperties from \"/Users/kevinw/projects/photoviewer-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/kevinw/projects/photoviewer-frontend/src/components/Grayscale.js\";\nimport React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport classnames from 'classnames';\nimport isString from 'lodash/isString';\nimport isBoolean from 'lodash/isBoolean';\nimport isFunction from 'lodash/isFunction';\n\nclass Grayscale extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.appendGrayScale = props => {\n      console.log(this.props);\n    };\n  }\n\n  render() {\n    const enabled = this.state.enabled; // Isolate special props and store the remaining as restProps\n\n    const _this$props = this.props,\n          _enabled = _this$props.enabled,\n          theme = _this$props.theme,\n          onClick = _this$props.onClick,\n          className = _this$props.className,\n          onStateChanged = _this$props.onStateChanged,\n          restProps = _objectWithoutProperties(_this$props, [\"enabled\", \"theme\", \"onClick\", \"className\", \"onStateChanged\"]); // Use default as a fallback theme if valid theme is not passed\n\n\n    const switchTheme = theme && isString(theme) ? theme : 'default';\n    const switchClasses = classnames(`switch switch--${switchTheme}`, className);\n    const togglerClasses = classnames('switch-toggle', `switch-toggle--${enabled ? 'on' : 'off'}`);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({\n      className: switchClasses,\n      onClick: this.toggleSwitch\n    }, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: togglerClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Grayscale;","map":{"version":3,"sources":["/Users/kevinw/projects/photoviewer-frontend/src/components/Grayscale.js"],"names":["React","Component","Proptypes","classnames","isString","isBoolean","isFunction","Grayscale","state","appendGrayScale","props","console","log","render","enabled","_enabled","theme","onClick","className","onStateChanged","restProps","switchTheme","switchClasses","togglerClasses","toggleSwitch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BO,KAD8B,GACvB,EADuB;;AAAA,SAK9BC,eAL8B,GAKXC,KAAD,IAAW;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACH,KAP6B;AAAA;;AAY9BG,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKN,KADpB,CACGM,OADH,EAGL;;AAHK,wBAIkF,KAAKJ,KAJvF;AAAA,UAIYK,QAJZ,eAIGD,OAJH;AAAA,UAIsBE,KAJtB,eAIsBA,KAJtB;AAAA,UAI6BC,OAJ7B,eAI6BA,OAJ7B;AAAA,UAIsCC,SAJtC,eAIsCA,SAJtC;AAAA,UAIiDC,cAJjD,eAIiDA,cAJjD;AAAA,UAIoEC,SAJpE,0GAML;;;AACA,UAAMC,WAAW,GAAIL,KAAK,IAAIZ,QAAQ,CAACY,KAAD,CAAlB,GAA6BA,KAA7B,GAAqC,SAAzD;AAEA,UAAMM,aAAa,GAAGnB,UAAU,CAC7B,kBAAiBkB,WAAY,EADA,EAE9BH,SAF8B,CAAhC;AAKA,UAAMK,cAAc,GAAGpB,UAAU,CAC/B,eAD+B,EAE9B,kBAAiBW,OAAO,GAAG,IAAH,GAAU,KAAM,EAFV,CAAjC;AAKA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAEQ,aAAhB;AAA+B,MAAA,OAAO,EAAE,KAAKE;AAA7C,OAA+DJ,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACK;AAAK,MAAA,SAAS,EAAEG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CADH,CADJ;AAQH;;AAvC6B;;AA2ClC,eAAehB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport classnames from 'classnames';\nimport isString from 'lodash/isString';\nimport isBoolean from 'lodash/isBoolean';\nimport isFunction from 'lodash/isFunction';\n\nclass Grayscale extends Component {\n    state ={\n\n    }\n    \n    appendGrayScale = (props) => {\n        console.log(this.props)\n    }\n    \n    \n    \n    \n    render() {\n        const { enabled } = this.state;\n    \n        // Isolate special props and store the remaining as restProps\n        const { enabled: _enabled, theme, onClick, className, onStateChanged, ...restProps } = this.props;\n    \n        // Use default as a fallback theme if valid theme is not passed\n        const switchTheme = (theme && isString(theme)) ? theme : 'default';\n    \n        const switchClasses = classnames(\n          `switch switch--${switchTheme}`,\n          className\n        )\n    \n        const togglerClasses = classnames(\n          'switch-toggle',\n          `switch-toggle--${enabled ? 'on' : 'off'}`\n        )\n    \n        return (\n            <div>\n               <div className={switchClasses} onClick={this.toggleSwitch} {...restProps}>\n                    <div className={togglerClasses}></div>\n                </div>\n                \n            </div>\n        );\n    }\n   \n}\n\nexport default Grayscale;"]},"metadata":{},"sourceType":"module"}