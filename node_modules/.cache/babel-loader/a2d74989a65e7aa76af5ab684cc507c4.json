{"ast":null,"code":"var _jsxFileName = \"/Users/kevinw/projects/photoviewer-frontend/src/components/ImageIndex.js\";\nimport React, { Component } from 'react';\nimport { Pagination, Container, Divider, Grid, Dimmer, Loader } from 'semantic-ui-react';\nimport PostCard from '../components/PostCard.js';\nimport Filter from '../components/Filter';\nimport '../imageindex.css';\n\nclass ImageIndex extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      imageIndex: [],\n      allImgs: [],\n      activePage: 1,\n      dimension: '',\n      grayScaleToggle: false\n    };\n\n    this.initialState = resData => {\n      this.setState({\n        // loading finished so update state to false\n        loading: false,\n        imageIndex: resData,\n        activePage: resData.page\n      }); // sessionStorage.setItem('pictures', JSON.stringify(resData))\n      // let obj = JSON.parse(sessionStorage.pictures);\n      // console.log(obj);\n    };\n\n    this.setFilterTerm = term => {\n      this.setState({\n        dimension: term\n      });\n    };\n\n    this.toggleSwitch = evt => {\n      evt.preventDefault();\n      this.setState({\n        grayScaleToggle: !this.state.grayScaleToggle\n      });\n    };\n\n    this.handlePage = (e, {\n      activePage\n    }) => {\n      let goToPage = {\n        activePage\n      };\n      let pagenum = goToPage.activePage;\n      let pagestring = pagenum.toString();\n      console.log(pagestring);\n      this.setState({\n        loading: true\n      }); // const url = `http://localhost:3000/images/?page=` + pagestring\n\n      const url = `https://photoviewer-backend.herokuapp.com/images/?page=` + pagestring;\n      fetch(url).then(res => res.json()).then(this.initialState);\n    };\n  }\n\n  componentDidMount() {\n    // change fetch below from 21 to 20 if 21 doesn't work\n    // fetch(`http://localhost:3000/get_All_Pictures`)\n    fetch(\"https://photoviewer-backend.herokuapp.com/get_AllPictures\").then(res => res.json()).then(data => this.setState({\n      allImgs: data\n    })); // changed fetch below from 24 to 25\n    // fetch(`http://localhost:3000/images`)\n\n    fetch(\"https://photoviewer-backend.herokuapp.com/images\").then(res => res.json()).then(this.initialState);\n  }\n\n  //filter dimentions function\n  filterPictures() {\n    const pictureGrid = [...this.state.allImgs.images];\n    console.log(this.state.allImgs.images);\n    let newFilteredList = []; // Filtering the spots by matching up the dimension with the dimension selected\n\n    if (this.state.dimension === \"\") newFilteredList = [...this.state.imageIndex.images];else {\n      newFilteredList = pictureGrid.filter(picture => picture.url.includes(this.state.dimension));\n    }\n    return newFilteredList.map(image => {\n      return React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(PostCard, {\n        grayScaleToggle: this.state.grayScaleToggle,\n        key: image.id,\n        image: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    });\n  } // handles the active page and toggles through the pages\n\n\n  render() {\n    console.log(this.state); // show while pictures are not loaded\n\n    if (this.state.loading) {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Dimmer, {\n        active: true,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Loading Images...\")));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Container, {\n      class: \"top-part\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Photo Viewer App\"), React.createElement(Filter, {\n      setFilterTerm: this.setFilterTerm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"ui toggle checkbox\",\n      onClick: this.toggleSwitch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"public\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Toggle Grayscale\")), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      onPageChange: this.handlePage,\n      size: \"mini\",\n      siblingRange: \"4\",\n      defaultActivePage: this.state.imageIndex.page,\n      totalPages: this.state.imageIndex.pages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      relaxed: true,\n      columns: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.filterPictures())));\n  }\n\n}\n\nexport default ImageIndex;","map":{"version":3,"sources":["/Users/kevinw/projects/photoviewer-frontend/src/components/ImageIndex.js"],"names":["React","Component","Pagination","Container","Divider","Grid","Dimmer","Loader","PostCard","Filter","ImageIndex","state","loading","imageIndex","allImgs","activePage","dimension","grayScaleToggle","initialState","resData","setState","page","setFilterTerm","term","toggleSwitch","evt","preventDefault","handlePage","e","goToPage","pagenum","pagestring","toString","console","log","url","fetch","then","res","json","componentDidMount","data","filterPictures","pictureGrid","images","newFilteredList","filter","picture","includes","map","image","id","render","pages"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Pagination, Container, Divider, Grid, Dimmer, Loader} from 'semantic-ui-react'; \nimport PostCard from '../components/PostCard.js';\nimport Filter from '../components/Filter';\nimport  '../imageindex.css'\n\nclass ImageIndex extends Component {\n\n    state = {\n        loading: true,\n        imageIndex: [],\n        allImgs: [],\n        activePage:1,\n        dimension:'',\n        grayScaleToggle: false   \n    }\n\n    componentDidMount(){\n        // change fetch below from 21 to 20 if 21 doesn't work\n         // fetch(`http://localhost:3000/get_All_Pictures`)\n         fetch(\"https://photoviewer-backend.herokuapp.com/get_AllPictures\")\n         .then(res => res.json())\n         .then(data => this.setState({allImgs: data}));\n        // changed fetch below from 24 to 25\n        // fetch(`http://localhost:3000/images`)\n        fetch(\"https://photoviewer-backend.herokuapp.com/images\")\n        .then(res => res.json())\n        .then(this.initialState); \n       \n    }\n\n\n    initialState = (resData) => {\n        this.setState({\n            // loading finished so update state to false\n            loading: false,\n            imageIndex: resData,\n            activePage: resData.page\n        })\n    \n        // sessionStorage.setItem('pictures', JSON.stringify(resData))\n        // let obj = JSON.parse(sessionStorage.pictures);\n        // console.log(obj);\n    }\n\n    setFilterTerm = (term) => {\n        this.setState({\n          dimension: term\n        })\n    }\n\n\n    toggleSwitch = evt => {\n        evt.preventDefault();\n            this.setState({ \n                grayScaleToggle: !this.state.grayScaleToggle,\n            })\n    }\n\n\n    //filter dimentions function\n\n    filterPictures(){\n        const pictureGrid = [...this.state.allImgs.images];\n        console.log(this.state.allImgs.images);\n        let newFilteredList = [];\n        // Filtering the spots by matching up the dimension with the dimension selected\n        if(this.state.dimension === \"\") newFilteredList = [...this.state.imageIndex.images];\n        else {\n            newFilteredList = pictureGrid.filter(picture => picture.url.includes(this.state.dimension))\n        }\n        return(\n            newFilteredList.map(image => {\n                return( <Grid.Column>\n                    <PostCard grayScaleToggle={this.state.grayScaleToggle} key={image.id} image={image}/>\n                </Grid.Column>)\n            })\n        )\n    }\n    \n// handles the active page and toggles through the pages\n    handlePage = (e, { activePage }) => {\n        let goToPage = { activePage }\n        let pagenum = goToPage.activePage\n        let pagestring = pagenum.toString()\n        console.log(pagestring)\n        this.setState({\n        loading: true\n        })\n        // const url = `http://localhost:3000/images/?page=` + pagestring\n        const url = `https://photoviewer-backend.herokuapp.com/images/?page=`+ pagestring\n\n        fetch(url)\n        .then(res => res.json())\n        .then(this.initialState)\n    }\n\n    render(){\n        console.log(this.state)\n\n        // show while pictures are not loaded\n        if(this.state.loading){\n            return(\n                <Container>\n                <Dimmer active inverted>\n                  <Loader>Loading Images...</Loader>\n                </Dimmer>\n              </Container>\n            )\n        }\n\n        return (\n            <div>\n            <Container>\n                <Divider hidden />\n                <Container class=\"top-part\" textAlign='center'>\n                <h1>Photo Viewer App</h1>\n                 <Filter setFilterTerm={this.setFilterTerm}/>\n                 <div class=\"ui toggle checkbox\" onClick={this.toggleSwitch}>\n                    <input type=\"checkbox\" name=\"public\" />\n                    <label>Toggle Grayscale</label>\n                </div> \n                 <Divider hidden />\n                <Pagination  onPageChange={this.handlePage} size='mini' siblingRange=\"4\" defaultActivePage={this.state.imageIndex.page} totalPages={this.state.imageIndex.pages} />\n                </Container>\n                    <Divider hidden />\n                <Grid relaxed columns={5}>\n                {/* { this.state.imageIndex.images.map(image => {\n                    return (\n                    <Grid.Column>\n                        <PostCard key={image.id} image={image}/>\n                    </Grid.Column>)\n                }) } */}\n                  {this.filterPictures()}\n                </Grid>\n\n            </Container>\n            </div>\n        );\n    }\n}\n\nexport default ImageIndex;"]},"metadata":{},"sourceType":"module"}