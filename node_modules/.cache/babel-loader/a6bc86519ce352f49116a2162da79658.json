{"ast":null,"code":"import _objectWithoutProperties from \"/Users/kevinw/projects/photoviewer-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/kevinw/projects/photoviewer-frontend/src/components/Grayscale.js\";\nimport React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport classnames from 'classnames';\nimport isString from 'lodash/isString';\nimport isBoolean from 'lodash/isBoolean';\nimport isFunction from 'lodash/isFunction';\n\nclass Grayscale extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      enable: 'no'\n    };\n\n    this.appendGrayScale = props => {\n      console.log(this.props);\n    };\n\n    this.toggleSwitch = evt => {\n      evt.persist();\n      evt.preventDefault();\n      const _this$props = this.props,\n            onClick = _this$props.onClick,\n            onStateChanged = _this$props.onStateChanged;\n      this.setState({\n        enabled: !this.state.enabled\n      }, () => {\n        const state = this.state; // Augument the event object with SWITCH_STATE\n\n        const switchEvent = Object.assign(evt, {\n          SWITCH_STATE: state\n        }); // Execute the callback functions\n\n        isFunction(onClick) && onClick(switchEvent);\n        isFunction(onStateChanged) && onStateChanged(state);\n      });\n    };\n  }\n\n  render() {\n    const enabled = this.state.enabled; // Isolate special props and store the remaining as restProps\n\n    const _this$props2 = this.props,\n          _enabled = _this$props2.enabled,\n          theme = _this$props2.theme,\n          onClick = _this$props2.onClick,\n          className = _this$props2.className,\n          onStateChanged = _this$props2.onStateChanged,\n          restProps = _objectWithoutProperties(_this$props2, [\"enabled\", \"theme\", \"onClick\", \"className\", \"onStateChanged\"]); // Use default as a fallback theme if valid theme is not passed\n\n\n    const switchTheme = theme && isString(theme) ? theme : 'default';\n    const switchClasses = classnames(`switch switch--${switchTheme}`, className);\n    const togglerClasses = classnames('switch-toggle', `switch-toggle--${enabled ? 'on' : 'off'}`);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({\n      className: switchClasses,\n      onClick: this.toggleSwitch\n    }, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: togglerClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Grayscale;","map":{"version":3,"sources":["/Users/kevinw/projects/photoviewer-frontend/src/components/Grayscale.js"],"names":["React","Component","Proptypes","classnames","isString","isBoolean","isFunction","Grayscale","state","enable","appendGrayScale","props","console","log","toggleSwitch","evt","persist","preventDefault","onClick","onStateChanged","setState","enabled","switchEvent","Object","assign","SWITCH_STATE","render","_enabled","theme","className","restProps","switchTheme","switchClasses","togglerClasses"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BO,KAD8B,GACtB;AACJC,MAAAA,MAAM,EAAE;AADJ,KADsB;;AAAA,SAK9BC,eAL8B,GAKXC,KAAD,IAAW;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACH,KAP6B;;AAAA,SAS9BG,YAT8B,GASfC,GAAG,IAAI;AAClBA,MAAAA,GAAG,CAACC,OAAJ;AACAD,MAAAA,GAAG,CAACE,cAAJ;AAFkB,0BAIkB,KAAKN,KAJvB;AAAA,YAIVO,OAJU,eAIVA,OAJU;AAAA,YAIDC,cAJC,eAIDA,cAJC;AAMlB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE,CAAC,KAAKb,KAAL,CAAWa;AAAvB,OAAd,EAAgD,MAAM;AACtD,cAAMb,KAAK,GAAG,KAAKA,KAAnB,CADsD,CAGtD;;AACA,cAAMc,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcT,GAAd,EAAmB;AAAEU,UAAAA,YAAY,EAAEjB;AAAhB,SAAnB,CAApB,CAJsD,CAMtD;;AACAF,QAAAA,UAAU,CAACY,OAAD,CAAV,IAAuBA,OAAO,CAACI,WAAD,CAA9B;AACAhB,QAAAA,UAAU,CAACa,cAAD,CAAV,IAA8BA,cAAc,CAACX,KAAD,CAA5C;AACC,OATD;AAUH,KAzB6B;AAAA;;AA4B9BkB,EAAAA,MAAM,GAAG;AAAA,UACGL,OADH,GACe,KAAKb,KADpB,CACGa,OADH,EAGL;;AAHK,yBAIkF,KAAKV,KAJvF;AAAA,UAIYgB,QAJZ,gBAIGN,OAJH;AAAA,UAIsBO,KAJtB,gBAIsBA,KAJtB;AAAA,UAI6BV,OAJ7B,gBAI6BA,OAJ7B;AAAA,UAIsCW,SAJtC,gBAIsCA,SAJtC;AAAA,UAIiDV,cAJjD,gBAIiDA,cAJjD;AAAA,UAIoEW,SAJpE,2GAML;;;AACA,UAAMC,WAAW,GAAIH,KAAK,IAAIxB,QAAQ,CAACwB,KAAD,CAAlB,GAA6BA,KAA7B,GAAqC,SAAzD;AAEA,UAAMI,aAAa,GAAG7B,UAAU,CAC7B,kBAAiB4B,WAAY,EADA,EAE9BF,SAF8B,CAAhC;AAKA,UAAMI,cAAc,GAAG9B,UAAU,CAC/B,eAD+B,EAE9B,kBAAiBkB,OAAO,GAAG,IAAH,GAAU,KAAM,EAFV,CAAjC;AAKA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAEW,aAAhB;AAA+B,MAAA,OAAO,EAAE,KAAKlB;AAA7C,OAA+DgB,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACK;AAAK,MAAA,SAAS,EAAEG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CADH,CADJ;AAQH;;AAvD6B;;AA2DlC,eAAe1B,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport classnames from 'classnames';\nimport isString from 'lodash/isString';\nimport isBoolean from 'lodash/isBoolean';\nimport isFunction from 'lodash/isFunction';\n\nclass Grayscale extends Component {\n    state = {\n        enable: 'no'\n    }\n\n    appendGrayScale = (props) => {\n        console.log(this.props)\n    }\n    \n    toggleSwitch = evt => {\n        evt.persist();\n        evt.preventDefault();\n\n        const { onClick, onStateChanged } = this.props;\n\n        this.setState({ enabled: !this.state.enabled }, () => {\n        const state = this.state;\n\n        // Augument the event object with SWITCH_STATE\n        const switchEvent = Object.assign(evt, { SWITCH_STATE: state });\n\n        // Execute the callback functions\n        isFunction(onClick) && onClick(switchEvent);\n        isFunction(onStateChanged) && onStateChanged(state);\n        });\n    }\n    \n    \n    render() {\n        const { enabled } = this.state;\n    \n        // Isolate special props and store the remaining as restProps\n        const { enabled: _enabled, theme, onClick, className, onStateChanged, ...restProps } = this.props;\n    \n        // Use default as a fallback theme if valid theme is not passed\n        const switchTheme = (theme && isString(theme)) ? theme : 'default';\n    \n        const switchClasses = classnames(\n          `switch switch--${switchTheme}`,\n          className\n        )\n    \n        const togglerClasses = classnames(\n          'switch-toggle',\n          `switch-toggle--${enabled ? 'on' : 'off'}`\n        )\n    \n        return (\n            <div>\n               <div className={switchClasses} onClick={this.toggleSwitch} {...restProps}>\n                    <div className={togglerClasses}></div>\n                </div>\n                \n            </div>\n        );\n    }\n   \n}\n\nexport default Grayscale;"]},"metadata":{},"sourceType":"module"}