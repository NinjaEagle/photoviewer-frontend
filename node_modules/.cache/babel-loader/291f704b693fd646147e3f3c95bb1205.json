{"ast":null,"code":"var _jsxFileName = \"/Users/kevinw/projects/photoviewer-frontend/src/components/Grayscale.js\";\nimport React, { Component } from 'react';\nimport isBoolean from 'lodash/isBoolean';\nimport isFunction from 'lodash/isFunction';\n\nclass Grayscale extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      enabled: false\n    };\n\n    this.appendGrayScale = props => {\n      console.log(this.props);\n    };\n\n    this.toggleSwitch = evt => {\n      evt.preventDefault();\n      const imageData = this.props.imageData;\n      const grayScaleImages = imageData.images.map(image => {\n        console.log(image.url); // image.url.concat(\"?grayscale\")\n      });\n      console.log(grayScaleImages);\n      this.setState({\n        enabled: !this.state.enabled\n      }, () => {\n        const state = this.state;\n      });\n    };\n  }\n\n  enabledFromProps() {\n    let enabled = this.props.enabled; // If enabled is a function, invoke the function\n\n    enabled = isFunction(enabled) ? enabled() : enabled; // Return enabled if it is a boolean, otherwise false\n\n    return isBoolean(enabled) && enabled;\n  }\n\n  render() {\n    console.log(this.props.imageData);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"ui toggle checkbox\",\n      onClick: this.toggleSwitch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"public\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Toggle Grayscale\")));\n  }\n\n}\n\nexport default Grayscale;","map":{"version":3,"sources":["/Users/kevinw/projects/photoviewer-frontend/src/components/Grayscale.js"],"names":["React","Component","isBoolean","isFunction","Grayscale","state","enabled","appendGrayScale","props","console","log","toggleSwitch","evt","preventDefault","imageData","grayScaleImages","images","map","image","url","setState","enabledFromProps","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACtB;AACJC,MAAAA,OAAO,EAAE;AADL,KADsB;;AAAA,SAe5BC,eAf4B,GAeTC,KAAD,IAAW;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACF,KAjB4B;;AAAA,SAmB7BG,YAnB6B,GAmBdC,GAAG,IAAI;AACnBA,MAAAA,GAAG,CAACC,cAAJ;AAEA,YAAMC,SAAS,GAAG,KAAKN,KAAL,CAAWM,SAA7B;AACA,YAAMC,eAAe,GAAGD,SAAS,CAACE,MAAV,CAAiBC,GAAjB,CAAsBC,KAAK,IAAI;AACnDT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACC,GAAlB,EADmD,CAEnD;AACH,OAHuB,CAAxB;AAIAV,MAAAA,OAAO,CAACC,GAAR,CAAYK,eAAZ;AACA,WAAKK,QAAL,CAAc;AAAEd,QAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAvB,OAAd,EAAgD,MAAM;AACjD,cAAMD,KAAK,GAAG,KAAKA,KAAnB;AACJ,OAFD;AAGH,KA/B6B;AAAA;;AAI9BgB,EAAAA,gBAAgB,GAAG;AAAA,QACXf,OADW,GACC,KAAKE,KADN,CACXF,OADW,EAGjB;;AACAA,IAAAA,OAAO,GAAGH,UAAU,CAACG,OAAD,CAAV,GAAsBA,OAAO,EAA7B,GAAkCA,OAA5C,CAJiB,CAMjB;;AACE,WAAOJ,SAAS,CAACI,OAAD,CAAT,IAAsBA,OAA7B;AACD;;AAsBHgB,EAAAA,MAAM,GAAG;AACPb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWM,SAAvB;AAEE,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,oBAAX;AAAgC,MAAA,OAAO,EAAE,KAAKH,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,CADJ,CADJ;AAQH;;AA7C6B;;AAiDlC,eAAeP,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport isBoolean from 'lodash/isBoolean';\nimport isFunction from 'lodash/isFunction';\n\nclass Grayscale extends Component {\n    state = {\n        enabled: false,\n    }\n    enabledFromProps() {\n      let { enabled } = this.props;\n      \n      // If enabled is a function, invoke the function\n      enabled = isFunction(enabled) ? enabled() : enabled;\n      \n      // Return enabled if it is a boolean, otherwise false\n        return isBoolean(enabled) && enabled;\n      }\n\n    \n      appendGrayScale = (props) => {\n        console.log(this.props)\n     }\n    \n     toggleSwitch = evt => {\n        evt.preventDefault();\n\n        const imageData = this.props.imageData;\n        const grayScaleImages = imageData.images.map( image => {\n            console.log(image.url)\n            // image.url.concat(\"?grayscale\")\n        })\n        console.log(grayScaleImages)\n        this.setState({ enabled: !this.state.enabled }, () => {\n             const state = this.state;\n        });\n    }\n    \n    \n    render() {\n      console.log(this.props.imageData)\n    \n        return (\n            <div>\n                <div class=\"ui toggle checkbox\" onClick={this.toggleSwitch}>\n                    <input type=\"checkbox\" name=\"public\" />\n                    <label>Toggle Grayscale</label>\n                </div> \n            </div>\n        );\n    }\n   \n}\n\nexport default Grayscale;"]},"metadata":{},"sourceType":"module"}