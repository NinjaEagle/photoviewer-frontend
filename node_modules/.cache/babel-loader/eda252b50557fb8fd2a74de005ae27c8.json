{"ast":null,"code":"var _jsxFileName = \"/Users/kevinw/projects/photoviewer-frontend/src/components/PostCard.js\";\nimport React, { Component } from 'react';\nimport { Card, Icon, Image } from 'semantic-ui-react';\n\nclass PostCard extends Component {\n  render() {\n    const imageUrl = this.props.image.url;\n    const imageWidth = imageUrl.split('/')[5];\n    const imageHeight = imageUrl.split('/')[6];\n    const expandlink = '/images/' + this.props.image.id + '/';\n    const grayScaleImg = imageUrl.concat(\"?grayscale\"); // for the future, I want to implement the like photo feature\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Card, {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.grayScaleToggle ? React.createElement(\"a\", {\n      href: expandlink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: grayScaleImg,\n      height: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })) : React.createElement(\"a\", {\n      href: expandlink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: imageUrl,\n      height: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: expandlink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.image.title)), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \" Image \", this.props.image.id, \" \\\\n \", imageWidth, \" by \", imageHeight)), React.createElement(Card.Content, {\n      extra: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"Image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"like\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default PostCard;","map":{"version":3,"sources":["/Users/kevinw/projects/photoviewer-frontend/src/components/PostCard.js"],"names":["React","Component","Card","Icon","Image","PostCard","render","imageUrl","props","image","url","imageWidth","split","imageHeight","expandlink","id","grayScaleImg","concat","grayScaleToggle","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;;AAGA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAE7BK,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAlC;AACA,UAAMC,UAAU,GAAGJ,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAnB;AACA,UAAMC,WAAW,GAAGN,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,CAApB;AACA,UAAME,UAAU,GAAG,aAAa,KAAKN,KAAL,CAAWC,KAAX,CAAiBM,EAA9B,GAAmC,GAAtD;AACA,UAAMC,YAAY,GAAGT,QAAQ,CAACU,MAAT,CAAgB,YAAhB,CAArB,CALK,CAQL;;AACA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKT,KAAL,CAAWU,eAAX,GAA4B;AAAG,MAAA,IAAI,EAAEJ,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEE,YAAZ;AAA0B,MAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,CAA5B,GAED;AAAG,MAAA,IAAI,EAAEF,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEP,QAAZ;AAAsB,MAAA,MAAM,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,CAHA,EAKI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa;AAAG,MAAA,IAAI,EAAEO,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKN,KAAL,CAAWC,KAAX,CAAiBU,KAAvC,CAAb,CAFA,EAGA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAKA,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0B,KAAKX,KAAL,CAAWC,KAAX,CAAiBM,EAA3C,WAAmDJ,UAAnD,UAAmEE,WAAnE,CALA,CALJ,EAYI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAG,MAAA,IAAI,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFA,CAZJ,CADJ,CADA;AAwBH;;AAnC4B;;AAsCjC,eAAeR,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Icon, Image } from 'semantic-ui-react';\n\n\nclass PostCard extends Component {\n\n    render() {\n        const imageUrl = this.props.image.url;\n        const imageWidth = imageUrl.split('/')[5]\n        const imageHeight = imageUrl.split('/')[6]\n        const expandlink = '/images/' + this.props.image.id + '/'\n        const grayScaleImg = imageUrl.concat(\"?grayscale\");\n\n\n        // for the future, I want to implement the like photo feature\n        return (\n        <div>\n            <Card color='blue'>\n            {this.props.grayScaleToggle? <a href={expandlink}><Image src={grayScaleImg} height /></a>\n                 : \n            <a href={expandlink}><Image src={imageUrl} height /></a>}\n\n                <Card.Content>\n                \n                <Card.Header><a href={expandlink}>{this.props.image.title}</a></Card.Header>\n                <Card.Meta>\n                </Card.Meta>\n                <Card.Description> Image {this.props.image.id} \\n {imageWidth} by {imageHeight}</Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n\n                <a href=\"Image\">\n                <Icon name='like' />\n            \n                </a>\n            </Card.Content>\n            </Card>\n        </div>\n        );\n    }\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}