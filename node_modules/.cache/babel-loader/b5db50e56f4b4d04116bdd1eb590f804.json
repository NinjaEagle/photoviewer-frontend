{"ast":null,"code":"import _classCallCheck from\"/Users/kevinw/projects/photoviewer-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kevinw/projects/photoviewer-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/kevinw/projects/photoviewer-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/kevinw/projects/photoviewer-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/kevinw/projects/photoviewer-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Card,Icon,Image}from'semantic-ui-react';var PostCard=/*#__PURE__*/function(_Component){_inherits(PostCard,_Component);function PostCard(){_classCallCheck(this,PostCard);return _possibleConstructorReturn(this,_getPrototypeOf(PostCard).apply(this,arguments));}_createClass(PostCard,[{key:\"render\",value:function render(){var imageUrl=this.props.image.url;var imageWidth=imageUrl.split('/')[5];var imageHeight=imageUrl.split('/')[6];var expandlink='/images/'+this.props.image.id+'/';var grayScaleImg=imageUrl.concat(\"?grayscale\");// for the future, I want to implement the like photo feature\nreturn React.createElement(\"div\",null,React.createElement(Card,{color:\"blue\"},this.props.grayScaleToggle?React.createElement(\"a\",{href:expandlink},React.createElement(Image,{src:grayScaleImg,height:true})):React.createElement(\"a\",{href:expandlink},React.createElement(Image,{src:imageUrl,height:true})),React.createElement(Card.Content,null,React.createElement(Card.Header,null,React.createElement(\"a\",{href:expandlink},this.props.image.title)),React.createElement(Card.Meta,null),React.createElement(Card.Description,null,\" Image \",this.props.image.id,\" \",React.createElement(\"br\",null),imageWidth,\" by \",imageHeight)),React.createElement(Card.Content,{extra:true},React.createElement(\"a\",{href:\"Image\"},React.createElement(Icon,{name:\"like\"})))));}}]);return PostCard;}(Component);export default PostCard;","map":{"version":3,"sources":["/Users/kevinw/projects/photoviewer-frontend/src/components/PostCard.js"],"names":["React","Component","Card","Icon","Image","PostCard","imageUrl","props","image","url","imageWidth","split","imageHeight","expandlink","id","grayScaleImg","concat","grayScaleToggle","title"],"mappings":"wzBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,KAArB,KAAkC,mBAAlC,C,GAGMC,CAAAA,Q,0QAEO,CACL,GAAMC,CAAAA,QAAQ,CAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAlC,CACA,GAAMC,CAAAA,UAAU,CAAGJ,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAnB,CACA,GAAMC,CAAAA,WAAW,CAAGN,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,CAApB,CACA,GAAME,CAAAA,UAAU,CAAG,WAAa,KAAKN,KAAL,CAAWC,KAAX,CAAiBM,EAA9B,CAAmC,GAAtD,CACA,GAAMC,CAAAA,YAAY,CAAGT,QAAQ,CAACU,MAAT,CAAgB,YAAhB,CAArB,CAGA;AACA,MACA,gCACI,oBAAC,IAAD,EAAM,KAAK,CAAC,MAAZ,EACC,KAAKT,KAAL,CAAWU,eAAX,CAA4B,yBAAG,IAAI,CAAEJ,UAAT,EAAqB,oBAAC,KAAD,EAAO,GAAG,CAAEE,YAAZ,CAA0B,MAAM,KAAhC,EAArB,CAA5B,CAED,yBAAG,IAAI,CAAEF,UAAT,EAAqB,oBAAC,KAAD,EAAO,GAAG,CAAEP,QAAZ,CAAsB,MAAM,KAA5B,EAArB,CAHA,CAKI,oBAAC,IAAD,CAAM,OAAN,MAEA,oBAAC,IAAD,CAAM,MAAN,MAAa,yBAAG,IAAI,CAAEO,UAAT,EAAsB,KAAKN,KAAL,CAAWC,KAAX,CAAiBU,KAAvC,CAAb,CAFA,CAGA,oBAAC,IAAD,CAAM,IAAN,MAHA,CAKA,oBAAC,IAAD,CAAM,WAAN,gBAA0B,KAAKX,KAAL,CAAWC,KAAX,CAAiBM,EAA3C,KAA+C,8BAA/C,CACCJ,UADD,QACiBE,WADjB,CALA,CALJ,CAaI,oBAAC,IAAD,CAAM,OAAN,EAAc,KAAK,KAAnB,EAEA,yBAAG,IAAI,CAAC,OAAR,EACA,oBAAC,IAAD,EAAM,IAAI,CAAC,MAAX,EADA,CAFA,CAbJ,CADJ,CADA,CAyBH,C,sBApCkBX,S,EAuCvB,cAAeI,CAAAA,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Icon, Image } from 'semantic-ui-react';\n\n\nclass PostCard extends Component {\n\n    render() {\n        const imageUrl = this.props.image.url;\n        const imageWidth = imageUrl.split('/')[5]\n        const imageHeight = imageUrl.split('/')[6]\n        const expandlink = '/images/' + this.props.image.id + '/'\n        const grayScaleImg = imageUrl.concat(\"?grayscale\");\n\n\n        // for the future, I want to implement the like photo feature\n        return (\n        <div>\n            <Card color='blue'>\n            {this.props.grayScaleToggle? <a href={expandlink}><Image src={grayScaleImg} height /></a>\n                 : \n            <a href={expandlink}><Image src={imageUrl} height /></a>}\n\n                <Card.Content>\n                \n                <Card.Header><a href={expandlink}>{this.props.image.title}</a></Card.Header>\n                <Card.Meta>\n                </Card.Meta>\n                <Card.Description> Image {this.props.image.id} <br></br>\n                {imageWidth} by {imageHeight}</Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n\n                <a href=\"Image\">\n                <Icon name='like' />\n            \n                </a>\n            </Card.Content>\n            </Card>\n        </div>\n        );\n    }\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}